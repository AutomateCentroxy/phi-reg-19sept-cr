// User Registration Techniques
Flow org.gluu.agama.registration.main
     Basepath ""
     Timeout 360 seconds
// Create  variable for UI feedback
uiFeedback = {}
emailObj = {}
// Iterate x times max
Repeat 6 times max
     // Retrieve user profile  from UI
     userInput = RRF "profile.ftlh" uiFeedback
     // create an instance of Registration service
     userRegistrationService = Call org.gluu.agama.user.UserRegistration#getInstance 
     // Assign userName, email and password  to a variable
     email = userInput.mail
     userName = userInput.uid
     userPassword = userInput.userPassword
     residenceCountry = userInput.residenceCountry
     phone = userInput.phoneNumber
     referralCode = userInput.referralCode
     lang = userInput.lang
     // Validate user inputs
     validation = Call userRegistrationService validateInputs userInput
     // Validation result log
     Log "@info Validation result:  % , % , %" validation validation.valid validation.message
     // If successfully validate
     When validation.valid is true
          // Check user already exist or not with mail
          user = Call userRegistrationService getUserEntityByMail email
          // If user not found
          When user.empty is true
               // Check user already exist or not with username
               userWithUid = Call userRegistrationService getUserEntityByUsername userName
               // user not found
               When userWithUid.empty is true
                    // sent Email otp
                    otpCode = Call userRegistrationService sendEmail email lang
                    Log "@info OTP generated and send to: " email
                    // EmailOtpValidationResult = flase
                    EmailOtpValidationResult = false
                    EmailMax = Repeat 4 times max
                         // "Email OTP verification loop Started"
                         Log "@info Email OTP verification loop Started"
                         // uiFeedback.email/matches
                         uiFeedback.email = email
                         uiFeedback.matches = true
                         RRF "__________" 
                    uiFeedback.errorMessage = "You have reached the maximun email OTP verification"
                    // Email OTP verification loop completed
                    Log "@info Email OTP verification loop completed"
                    it_mfkvi = {success:false, error: "User update flow reached max attempts. Try later"}
                    Finish it_mfkvi
               Otherwise
                    // User already registered with UID
                    Log "@info User already registered with uid: %" userName
                    // User already registered with UID
                    uiFeedback.errorMessage = "User already registered with this UserName"
          Otherwise
               // User already registered with mail
               Log "@info User already registered with mail: %" email
               // User already Registered
               uiFeedback.errorMessage = "User already Registered with this mail"
     Otherwise
          // Validate message 
          uiFeedback.errorMessage = validation.message
// Maximum attempt reached
Log "@info Maximum attempt reached"
// User Registration flow failed
it_mptnm = {success:false, error: "User registration flow reached max attempts try later"}
Finish it_mptnm